apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-shared-pipeline
  namespace: jenkins
data:
  deploy-pipeline.groovy: |
    pipeline {
      agent {
        kubernetes {
          inheritFrom 'buildah-template'
        }
      }
      parameters {
        string(name: 'REPO_URL', description: 'Git репозиторий с кодом')
        string(name: 'BRANCH', defaultValue: 'develop', description: 'Ветка Git')
        string(name: 'IMAGE_NAME', description: 'Имя Docker-образа (включая registry)')
        string(name: 'CHART_REPO', description: 'Репозиторий Helm chart-ов')
        string(name: 'CHART_PATH', description: 'Путь до values.yaml внутри чарта')
      }
      environment {
        IMAGE_TAG = "${env.BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = 'harbor-creds'
        GIT_CREDENTIALS = 'git-creds'
      }
      stages {
        stage('Клонируем проект') {
          steps {
            git branch: "${params.BRANCH}",
                credentialsId: "${env.GIT_CREDENTIALS}",
                url: "${params.REPO_URL}"
          }
        }

        stage('Собираем и пушим образ') {
          steps {
            container('buildah') {
              withCredentials([usernamePassword(credentialsId: REGISTRY_CREDENTIALS,
                                                usernameVariable: 'REGISTRY_USER',
                                                passwordVariable: 'REGISTRY_PASS')]) {
                sh """
                  buildah bud -t ${params.IMAGE_NAME}:${IMAGE_TAG} .
                  echo "\$REGISTRY_PASS" | buildah login -u \$REGISTRY_USER --password-stdin ${params.IMAGE_NAME.split('/')[0]}
                  buildah push ${params.IMAGE_NAME}:${IMAGE_TAG}
                  buildah rmi ${params.IMAGE_NAME}:${IMAGE_TAG} || true
                """
              }
            }
          }
        }

        stage('Обновляем Helm чарт') {
          steps {
            dir('chart') {
              git credentialsId: "${env.GIT_CREDENTIALS}", url: "${params.CHART_REPO}"
              sh """
                sed -i 's/tag:.*/tag: "${IMAGE_TAG}"/' ${params.CHART_PATH}
                git add ${params.CHART_PATH}
                git commit -m "Обновлен tag до ${IMAGE_TAG}"
                git push
              """
            }
          }
        }
      }
    }


  java_project.groovy: |
    pipelineJob('project-java') {
      definition {
        cps {
          script('''
    pipeline {
      agent {
        kubernetes {
          inheritFrom 'buildah-template'
        }
      }
      environment {
        IMAGE_TAG = "${env.BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = 'harbor-creds'
        GIT_CREDENTIALS = 'git-creds'
      }
      parameters {
        string(name: 'REPO_URL', defaultValue: 'https://github.com/gorbachoff33/database-service.git', description: '')
        string(name: 'BRANCH', defaultValue: 'develop', description: '')
        string(name: 'IMAGE_NAME', defaultValue: '8761.online-vds.ru:32001/db-service', description: '')
        string(name: 'CHART_REPO', defaultValue: 'https://github.com/gorbachoff33/argocd.git', description: '')
        string(name: 'CHART_PATH', defaultValue: 'db-service/values.yaml', description: '')
      }
      triggers {
        scm('H/2 * * * *')
      }
      stages {
        stage('Клонируем проект') {
          steps {
            git branch: "${params.BRANCH}",
                credentialsId: "${env.GIT_CREDENTIALS}",
                url: "${params.REPO_URL}"
          }
        }

        stage('Собираем и пушим образ') {
          steps {
            container('buildah') {
              withCredentials([usernamePassword(credentialsId: REGISTRY_CREDENTIALS,
                                                usernameVariable: 'REGISTRY_USER',
                                                passwordVariable: 'REGISTRY_PASS')]) {
                sh """
                  buildah bud -t ${params.IMAGE_NAME}:${IMAGE_TAG} .
                  echo "\$REGISTRY_PASS" | buildah login -u \$REGISTRY_USER --password-stdin ${params.IMAGE_NAME.split('/')[0]}
                  buildah push ${params.IMAGE_NAME}:${IMAGE_TAG}
                  buildah rmi ${params.IMAGE_NAME}:${IMAGE_TAG} || true
                """
              }
            }
          }
        }

        stage('Обновляем Helm чарт') {
          steps {
            dir('chart') {
              git credentialsId: "${env.GIT_CREDENTIALS}", url: "${params.CHART_REPO}"
              sh """
                sed -i 's/tag:.*/tag: "${IMAGE_TAG}"/' ${params.CHART_PATH}
                git add ${params.CHART_PATH}
                git commit -m "Обновлен tag до ${IMAGE_TAG}"
                git push
              """
            }
          }
        }
      }
    }
    ''')
          sandbox(false)
        }
      }
    }

