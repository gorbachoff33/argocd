apiVersion: apps/v1
kind: Deployment
metadata:
  name: squid-proxy
  namespace: parsers
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: squid-proxy
  template:
    metadata:
      labels:
        app: squid-proxy
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
      affinity:
        nodeAffinity: {{ toYaml .Values.nodeAffinity | nindent 10 }}
      containers:
        - name: squid
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: squid-config
            mountPath: /etc/squid/squid.conf
            subPath: squid.conf
            readOnly: true
          
          ports:
            {{- range .Values.ports }}
            - containerPort: {{ . }}
              name: squid-{{ . }}
            {{- end }}
          securityContext:
            runAsUser: 0
            privileged: true
        - name: proxy-router
          image: "{{ .Values.proxyRouter.image.repository }}:{{ .Values.proxyRouter.image.tag }}"
          imagePullPolicy: {{ .Values.proxyRouter.image.pullPolicy }}
          command: ["python"]
          args: ["/app/proxy-router.py"]
          volumeMounts:
            - name: proxy-router-script
              mountPath: /app/proxy-router.py
              subPath: proxy-router.py

      volumes:
        - name: squid-config
          configMap:
            name: squid-config
        - name: proxy-router-script
          configMap:
            name: proxy-router-script

